// Code generated by protoc-gen-go. DO NOT EDIT.
// source: message.proto

package echo

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RequestMessage struct {
	Sent                 *timestamp.Timestamp `protobuf:"bytes,1,opt,name=sent,proto3" json:"sent,omitempty"`
	Source               *EchoNode            `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	Target               *EchoNode            `protobuf:"bytes,3,opt,name=target,proto3" json:"target,omitempty"`
	Nodes                []*EchoNode          `protobuf:"bytes,4,rep,name=nodes,proto3" json:"nodes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *RequestMessage) Reset()         { *m = RequestMessage{} }
func (m *RequestMessage) String() string { return proto.CompactTextString(m) }
func (*RequestMessage) ProtoMessage()    {}
func (*RequestMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{0}
}

func (m *RequestMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestMessage.Unmarshal(m, b)
}
func (m *RequestMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestMessage.Marshal(b, m, deterministic)
}
func (m *RequestMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestMessage.Merge(m, src)
}
func (m *RequestMessage) XXX_Size() int {
	return xxx_messageInfo_RequestMessage.Size(m)
}
func (m *RequestMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestMessage.DiscardUnknown(m)
}

var xxx_messageInfo_RequestMessage proto.InternalMessageInfo

func (m *RequestMessage) GetSent() *timestamp.Timestamp {
	if m != nil {
		return m.Sent
	}
	return nil
}

func (m *RequestMessage) GetSource() *EchoNode {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *RequestMessage) GetTarget() *EchoNode {
	if m != nil {
		return m.Target
	}
	return nil
}

func (m *RequestMessage) GetNodes() []*EchoNode {
	if m != nil {
		return m.Nodes
	}
	return nil
}

type EchoNode struct {
	Region               string   `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	Uri                  string   `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	Port                 string   `protobuf:"bytes,3,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EchoNode) Reset()         { *m = EchoNode{} }
func (m *EchoNode) String() string { return proto.CompactTextString(m) }
func (*EchoNode) ProtoMessage()    {}
func (*EchoNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{1}
}

func (m *EchoNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EchoNode.Unmarshal(m, b)
}
func (m *EchoNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EchoNode.Marshal(b, m, deterministic)
}
func (m *EchoNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EchoNode.Merge(m, src)
}
func (m *EchoNode) XXX_Size() int {
	return xxx_messageInfo_EchoNode.Size(m)
}
func (m *EchoNode) XXX_DiscardUnknown() {
	xxx_messageInfo_EchoNode.DiscardUnknown(m)
}

var xxx_messageInfo_EchoNode proto.InternalMessageInfo

func (m *EchoNode) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *EchoNode) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *EchoNode) GetPort() string {
	if m != nil {
		return m.Port
	}
	return ""
}

type ResponseMessage struct {
	Id                   string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Request              *RequestMessage `protobuf:"bytes,2,opt,name=request,proto3" json:"request,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ResponseMessage) Reset()         { *m = ResponseMessage{} }
func (m *ResponseMessage) String() string { return proto.CompactTextString(m) }
func (*ResponseMessage) ProtoMessage()    {}
func (*ResponseMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{2}
}

func (m *ResponseMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseMessage.Unmarshal(m, b)
}
func (m *ResponseMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseMessage.Marshal(b, m, deterministic)
}
func (m *ResponseMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseMessage.Merge(m, src)
}
func (m *ResponseMessage) XXX_Size() int {
	return xxx_messageInfo_ResponseMessage.Size(m)
}
func (m *ResponseMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseMessage proto.InternalMessageInfo

func (m *ResponseMessage) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ResponseMessage) GetRequest() *RequestMessage {
	if m != nil {
		return m.Request
	}
	return nil
}

func init() {
	proto.RegisterType((*RequestMessage)(nil), "echo.RequestMessage")
	proto.RegisterType((*EchoNode)(nil), "echo.EchoNode")
	proto.RegisterType((*ResponseMessage)(nil), "echo.ResponseMessage")
}

func init() { proto.RegisterFile("message.proto", fileDescriptor_33c57e4bae7b9afd) }

var fileDescriptor_33c57e4bae7b9afd = []byte{
	// 282 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0xcd, 0x4a, 0xc4, 0x30,
	0x14, 0x85, 0xed, 0x8f, 0xd5, 0xde, 0xc1, 0x2a, 0x41, 0xa5, 0x74, 0xe3, 0x50, 0x44, 0x5c, 0x65,
	0x60, 0xc4, 0x37, 0x50, 0x70, 0xa3, 0x60, 0xf4, 0x05, 0x3a, 0xed, 0xb5, 0x13, 0xb0, 0xbd, 0x35,
	0x49, 0x7d, 0x34, 0x9f, 0x4f, 0x9a, 0x34, 0x8b, 0x81, 0xee, 0xee, 0xcf, 0xb9, 0x27, 0x5f, 0x0e,
	0x9c, 0x75, 0xa8, 0x75, 0xd5, 0x22, 0x1f, 0x14, 0x19, 0x62, 0x31, 0xd6, 0x7b, 0x2a, 0x6e, 0x5a,
	0xa2, 0xf6, 0x1b, 0x37, 0x76, 0xb6, 0x1b, 0xbf, 0x36, 0x46, 0x76, 0xa8, 0x4d, 0xd5, 0x0d, 0x4e,
	0x56, 0xfe, 0x05, 0x90, 0x09, 0xfc, 0x19, 0x51, 0x9b, 0x57, 0x77, 0xcf, 0x38, 0xc4, 0x1a, 0x7b,
	0x93, 0x07, 0xeb, 0xe0, 0x7e, 0xb5, 0x2d, 0xb8, 0xb3, 0xe0, 0xde, 0x82, 0x7f, 0x7a, 0x0b, 0x61,
	0x75, 0xec, 0x0e, 0x12, 0x4d, 0xa3, 0xaa, 0x31, 0x0f, 0xed, 0x45, 0xc6, 0xa7, 0xa7, 0xf9, 0x73,
	0xbd, 0xa7, 0x37, 0x6a, 0x50, 0xcc, 0xdb, 0x49, 0x67, 0x2a, 0xd5, 0xa2, 0xc9, 0xa3, 0x65, 0x9d,
	0xdb, 0xb2, 0x5b, 0x38, 0xee, 0xa9, 0x41, 0x9d, 0xc7, 0xeb, 0x68, 0x41, 0xe6, 0x96, 0xe5, 0x0b,
	0x9c, 0xfa, 0x11, 0xbb, 0x86, 0x44, 0x61, 0x2b, 0xa9, 0xb7, 0xcc, 0xa9, 0x98, 0x3b, 0x76, 0x01,
	0xd1, 0xa8, 0xa4, 0xc5, 0x4a, 0xc5, 0x54, 0x32, 0x06, 0xf1, 0x40, 0xca, 0x11, 0xa4, 0xc2, 0xd6,
	0xe5, 0x3b, 0x9c, 0x0b, 0xd4, 0x03, 0xf5, 0x1a, 0x7d, 0x04, 0x19, 0x84, 0xb2, 0x99, 0xcd, 0x42,
	0xd9, 0x30, 0x0e, 0x27, 0xca, 0x85, 0x34, 0xff, 0xf1, 0xd2, 0x41, 0x1d, 0x26, 0x27, 0xbc, 0x68,
	0xfb, 0x04, 0xab, 0x09, 0xee, 0x03, 0xd5, 0xaf, 0xac, 0x91, 0x3d, 0x42, 0x3c, 0xb5, 0x6c, 0xf1,
	0xaa, 0xb8, 0xf2, 0xd3, 0x03, 0x86, 0xf2, 0x68, 0x97, 0xd8, 0xc8, 0x1f, 0xfe, 0x03, 0x00, 0x00,
	0xff, 0xff, 0x66, 0x75, 0x17, 0x68, 0xda, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EchoServiceClient is the client API for EchoService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EchoServiceClient interface {
	Echo(ctx context.Context, in *RequestMessage, opts ...grpc.CallOption) (*ResponseMessage, error)
}

type echoServiceClient struct {
	cc *grpc.ClientConn
}

func NewEchoServiceClient(cc *grpc.ClientConn) EchoServiceClient {
	return &echoServiceClient{cc}
}

func (c *echoServiceClient) Echo(ctx context.Context, in *RequestMessage, opts ...grpc.CallOption) (*ResponseMessage, error) {
	out := new(ResponseMessage)
	err := c.cc.Invoke(ctx, "/echo.EchoService/Echo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EchoServiceServer is the server API for EchoService service.
type EchoServiceServer interface {
	Echo(context.Context, *RequestMessage) (*ResponseMessage, error)
}

func RegisterEchoServiceServer(s *grpc.Server, srv EchoServiceServer) {
	s.RegisterService(&_EchoService_serviceDesc, srv)
}

func _EchoService_Echo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EchoServiceServer).Echo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/echo.EchoService/Echo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EchoServiceServer).Echo(ctx, req.(*RequestMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _EchoService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "echo.EchoService",
	HandlerType: (*EchoServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Echo",
			Handler:    _EchoService_Echo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "message.proto",
}
